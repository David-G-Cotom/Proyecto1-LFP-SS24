/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

import backend.AnalizadorCodigo;
import backend.DocumentoHTML;
import backend.html.model.AnalizadorLexicoHTML;
import backend.html.model.TokenHTML;
import backend.css.model.AnalizadorLexicoCSS;
import backend.css.model.TokenCSS;
import backend.js.model.AnalizadorLexicoJS;
import backend.js.model.TokenJS;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Carlos Cotom
 */
public class InterfazPrincipal extends javax.swing.JFrame {

    private ArrayList<TokenHTML> tokensHTML;
    private final AnalizadorLexicoHTML analizadorHTML;
    private ArrayList<TokenCSS> tokensCSS;
    private final AnalizadorLexicoCSS analizadorCSS;
    private ArrayList<TokenJS> tokensJS;
    private final AnalizadorLexicoJS analizadorJS;
    private AnalizadorCodigo compilador;
    
    /**
     * Creates new form InterfazPrincipal
     */
    public InterfazPrincipal() {
        initComponents();
        this.analizadorHTML = new AnalizadorLexicoHTML();
        this.tokensHTML = new ArrayList<>();
        this.analizadorCSS = new AnalizadorLexicoCSS();
        this.tokensCSS = new ArrayList<>();
        this.analizadorJS = new AnalizadorLexicoJS();
        this.tokensJS = new ArrayList<>();
        this.btnExportar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        btnCarga = new javax.swing.JButton();
        btnTraducir = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();
        btnReporteTokens = new javax.swing.JButton();
        btnReporteOptimizacion = new javax.swing.JButton();
        btnReporteErrores = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaCodigo = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaCompilado = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCarga.setText("Cargar Archivo");
        btnCarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargaActionPerformed(evt);
            }
        });

        btnTraducir.setText("Compilar");
        btnTraducir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraducirActionPerformed(evt);
            }
        });

        btnExportar.setText("Exportar HTML");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        btnReporteTokens.setText("Reporte de Tokens");

        btnReporteOptimizacion.setText("Reporte de Optimizacion");

        btnReporteErrores.setText("Reporte de Errores");

        txaCodigo.setColumns(20);
        txaCodigo.setRows(5);
        jScrollPane1.setViewportView(txaCodigo);

        txaCompilado.setEditable(false);
        txaCompilado.setColumns(20);
        txaCompilado.setRows(5);
        jScrollPane2.setViewportView(txaCompilado);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCarga)
                        .addGap(18, 18, 18)
                        .addComponent(btnTraducir)
                        .addGap(18, 18, 18)
                        .addComponent(btnExportar)
                        .addGap(18, 18, 18)
                        .addComponent(btnReporteTokens)
                        .addGap(18, 18, 18)
                        .addComponent(btnReporteOptimizacion)
                        .addGap(18, 18, 18)
                        .addComponent(btnReporteErrores))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCarga)
                    .addComponent(btnTraducir)
                    .addComponent(btnExportar)
                    .addComponent(btnReporteTokens)
                    .addComponent(btnReporteOptimizacion)
                    .addComponent(btnReporteErrores))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargaActionPerformed
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.txt", "txt");
        jFileChooser1.setFileFilter(filtro);
        jFileChooser1.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jFileChooser1.setVisible(true);
        int resultado = jFileChooser1.showOpenDialog(this);
        if (resultado == JFileChooser.APPROVE_OPTION) {
            try (BufferedReader reader = new BufferedReader(new FileReader(jFileChooser1.getSelectedFile()))) {
                this.txaCodigo.read(reader, null);
            } catch (IOException e) {
                System.out.println("Error al imprimir el codigo fuente");
            }
        }
    }//GEN-LAST:event_btnCargaActionPerformed

    private void btnTraducirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraducirActionPerformed
        this.compilador = new AnalizadorCodigo();
        if (this.txaCodigo.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Debe de Ingresar Codigo Fuente");
            return;
        }
        String codigoOptimizado = compilador.optimizarCodigo(this.txaCodigo.getText());
        compilador.analizarCodigoFuente(codigoOptimizado);
        this.txaCompilado.setText(compilador.getCodigoCompilado());
        this.btnExportar.setEnabled(true);
        /*if (!this.tokensHTML.isEmpty()) {
            this.tokensHTML.clear();
        }
        this.tokensHTML = this.analizadorHTML.getTokens(this.txaCodigo.getText());*/
        /*if (!this.tokensCSS.isEmpty()) {
            this.tokensCSS.clear();
        }
        this.tokensCSS = this.analizadorCSS.getTokens(this.txaCodigo.getText());*/
        /*if (!this.tokensJS.isEmpty()) {
            this.tokensJS.clear();
        }
        this.tokensJS = this.analizadorJS.getTokens(this.txaCodigo.getText());*/
    }//GEN-LAST:event_btnTraducirActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        DocumentoHTML documentoHTML = new DocumentoHTML();
        documentoHTML.setCodigoHTML(this.compilador.getBloquesCodigoHTML());
        documentoHTML.setCodigoCSS(this.compilador.getBloquesCodigoCSS());
        documentoHTML.setCodigoJS(this.compilador.getBloquesCodigoJS());
        documentoHTML.generarDocumento();
    }//GEN-LAST:event_btnExportarActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCarga;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnReporteErrores;
    private javax.swing.JButton btnReporteOptimizacion;
    private javax.swing.JButton btnReporteTokens;
    private javax.swing.JButton btnTraducir;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txaCodigo;
    private javax.swing.JTextArea txaCompilado;
    // End of variables declaration//GEN-END:variables
}
